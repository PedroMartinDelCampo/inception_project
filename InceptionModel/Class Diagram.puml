@startuml
abstract class inception.model.Stimulus {
    getStart(): Duration
    setStart(Duration d)
    {abstract} getLength(): Duration
    {abstract} execute()
    {abstract} end()
}
class inception.concurrency.BatchExecutor
class inception.concurrency.ParallelExecutor
class inception.concurrency.Step
class inception.model.Frame {
    - executor : ParallelExecutor
    add(Stimulus stimulus)
    getStimuli(): stimuli
    remove(int i)
}
class inception.model.Story {
    - executor: BatchExecutor
    add(Frame frame)
    getFrames()
    remove(int i)
}
class javafx.collections.FXCollections
class javafx.collections.ObservableList
class javafx.util.Duration
interface inception.model.Animatable {
    play()
    end()
}
inception.model.Stimulus --|> inception.concurrency.Step
inception.model.Stimulus ..> javafx.util.Duration
inception.model.Stimulus --|> inception.model.Animatable
inception.model.Frame ..> inception.concurrency.ParallelExecutor
inception.model.Frame ..> inception.concurrency.Step
inception.model.Frame ..> javafx.collections.FXCollections
inception.model.Frame ..> javafx.collections.ObservableList
inception.model.Frame --|> inception.model.Animatable
inception.model.Story ..> inception.concurrency.BatchExecutor
inception.model.Story ..> javafx.collections.FXCollections
inception.model.Story ..> javafx.collections.ObservableList
inception.model.Story --|> inception.model.Animatable
@enduml